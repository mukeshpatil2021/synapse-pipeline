{
	"name": "SQL_DDLs",
	"properties": {
		"content": {
			"query": "CREATE SCHEMA CONTROL_SCHEMA;\n\nCREATE TABLE [CONTROL_SCHEMA].[control_metadata]\n(\n\tId INT,\n\tdatabase_name VARCHAR(255),\n\tschema_name VARCHAR(255),\n\ttable_name VARCHAR(255),\n    status VARCHAR(255),\n    created_time DATETIME\n\n);\n\nINSERT INTO CONTROL_SCHEMA.control_metadata\nSELECT 1,'POC_DB','MARINE_POC','VALIDATE_SET_JSON','ACTIVE',CURRENT_TIMESTAMP;\n\nINSERT INTO CONTROL_SCHEMA.control_metadata\nSELECT 2,'POC_DB','MARINE_POC','TRAINING_SET_JSON','ACTIVE',CURRENT_TIMESTAMP;\n\nUPDATE [CONTROL_SCHEMA].[control_metadata]\nSET status = 'inactive'\nwhere table_name = 'training_set_json'\n\nSELECT * FROM control_schema.control_metadata;\n\nDROP TABLE control_schema.control_metadata;\n\nSELECT CURRENT_TIMESTAMP\n\ncreate table control_schema.pipeline_logs\n(\n    schema_name VARCHAR(255),\n    table_name VARCHAR(255),\n\tpipeline_name VARCHAR(255),\n\tpipeline_run_id VARCHAR(255),\n\tsrc_rows_count VARCHAR(255),\n\traw_layer_count VARCHAR(255),\n\tstaging_layer_count VARCHAR(255),\n\tclean_layer_count VARCHAR(255),\n\tpipeline_start_time VARCHAR(255),\n\tpipeline_end_time VARCHAR(255),\n\tpipeline_status VARCHAR(255)\n);\n\nselect * from control_schema.pipeline_logs order by pipeline_start_time DESC\n\nselect CURRENT_TIMESTAMP\n\n\nCREATE PROCEDURE control_schema.sp_initial_pipeline_logs\n(\n    @schema_name VARCHAR(255),\n    @table_name VARCHAR(255),\n    @pipeline_name VARCHAR(255),\n\t@pipeline_run_id VARCHAR(255),\n    @pipeline_start_time VARCHAR(255)\n)\nAS\n    BEGIN\n        INSERT INTO control_schema.pipeline_logs(schema_name,table_name,pipeline_name,pipeline_run_id,pipeline_start_time,pipeline_status)\n\t\tVALUES\n        (\n            @schema_name,\n            @table_name,\n            @pipeline_name,\n            @pipeline_run_id,\n            @pipeline_start_time,\n            'inprogress'\n        )\n    END\nGO\n\n\nCREATE PROCEDURE control_schema.sp_update_count_pipeline_logs\n\t(\n\t    @schema_name VARCHAR(255),\n\t\t@table_name VARCHAR(255),\n        @pipeline_name VARCHAR(255),\n        @pipeline_run_id VARCHAR(255),\n\t\t@src_rows_count VARCHAR(255),\n\t\t@raw_layer_count VARCHAR(255),\n\t\t@staging_layer_count VARCHAR(255)\n\t)\nAS\n\tBEGIN\n\t\tUPDATE control_schema.pipeline_logs \n\t\tSET src_rows_count = @src_rows_count,\n\t\t\traw_layer_count = @raw_layer_count,\n\t\t\tstaging_layer_count = (SELECT value FROM STRING_SPLIT(@staging_layer_count, '-', 1) \n                                    where ordinal = 1),\n            clean_layer_count = (SELECT value FROM STRING_SPLIT(@staging_layer_count, '-', 1) \n                                    where ordinal = 2)\n        WHERE pipeline_name = @pipeline_name AND \n              pipeline_run_id = @pipeline_run_id AND \n              schema_name = @schema_name AND \n              table_name = @table_name \n\tEND\nGO\n\nDROP PROCEDURE control_schema.sp_update_count_pipeline_logs\n\nCREATE PROCEDURE control_schema.sp_success_pipeline_logs\n\t(\n\t\t@pipeline_name VARCHAR(255),\n\t\t@pipeline_run_id VARCHAR(255)\n\t)\nAS\n\tBEGIN\n\t\tUPDATE control_schema.pipeline_logs \n\t\tSET pipeline_end_time = SYSDATETIME(),\n\t\t\tpipeline_status = 'success'\n        WHERE pipeline_name = @pipeline_name AND \n              pipeline_run_id = @pipeline_run_id AND \n              pipeline_status != 'failed'\n\tEND\nGO\n\n\n\nCREATE PROCEDURE control_schema.sp_failed_pipeline_logs\n(\n\t@schema_name VARCHAR(255),\n\t@table_name VARCHAR(255),\n    @pipeline_name VARCHAR(255),\n\t@pipeline_run_id VARCHAR(255)\n)\nAS\n    BEGIN\n        UPDATE control_schema.pipeline_logs \n        SET pipeline_status = 'failed'\n        WHERE pipeline_name = @pipeline_name AND \n              pipeline_run_id = @pipeline_run_id AND \n              schema_name = @schema_name AND \n              table_name = @table_name \n    END\nGO\n\nSELECT * FROM STRING_SPLIT('d0ed82c2-db01-4bad-987d-b2e63b2c6010', '-', 1)\n\nDECLARE @stg_count VARCHAR(255);\n\nSELECT stg_count = value FROM STRING_SPLIT('d0ed82c2-db01-4bad-987d-b2e63b2c6010', '-', 1) \nwhere ordinal = 2\n\nselect * from control_schema.pipeline_logs\n\nUPDATE control_schema.pipeline_logs \n\t\tSET pipeline_end_time = SYSDATETIME(),\n\t\t\tpipeline_status = 'success',\n            clean_layer_count = (SELECT value FROM STRING_SPLIT(, '-', 1) \n                                    where ordinal = 2)\n        WHERE \n              pipeline_run_id = 'd0ed82c2-db01-4bad-987d-b2e63b2c6010' AND \n              pipeline_status != 'failed'\n\n\nCREATE TABLE control_schema.dq_constraints\n(\n    id INT,\n    database_name VARCHAR(255),\n    schema_name VARCHAR(255),\n    table_name VARCHAR(255),\n    dq_rules VARCHAR(255),\n    status VARCHAR(255)\n)\n\nDROP TABLE control_schema.dq_constraints\n\nINSERT INTO control_schema.dq_constraints\nVALUES\n(\n    1,'POC_DB','MARINE_SCHEMA','TRAINING_SET_JSON','MMSI:null_chk','active'\n)\n\nINSERT INTO control_schema.dq_constraints\nVALUES\n(\n    2,'POC_DB','MARINE_SCHEMA','TRAINING_SET_JSON','vessel_type:numeric_value_chk','active'\n)\n\nINSERT INTO control_schema.dq_constraints\nVALUES\n(\n    1,'POC_DB','MARINE_SCHEMA','VALIDATE_SET_JSON','vessel_type:null_chk','active'\n)\n\nINSERT INTO control_schema.dq_constraints\nVALUES\n(\n    2,'POC_DB','MARINE_SCHEMA','VALIDATE_SET_JSON','voyage:numeric_value_chk','active'\n)\n\nDROP TABLE dai_db.validate_set;\n\n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "dai_gco_analytics_dp",
				"poolName": "dai_gco_analytics_dp"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}